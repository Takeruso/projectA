import{a}from"./api-DWlUI4O7.js";import{_ as t,c as e,b as i,u as s,d as l,w as n,r,f as o,t as d,i as c,v as u,q as h,F as y,l as b,e as f,m as v}from"./index-DNfTXETz.js";import"./index-BTvahscA.js";const m={class:"container header-container"},p={class:"logo"},k={class:"user-info"},g={class:"notifications-btn"},w={key:0,class:"alert-count"},S={class:"user-name"},D={class:"user-avatar"},U={class:"container"},C={class:"availability-section"},M={class:"controls-bar"},A={class:"date-selector"},W={class:"tabs"},$={class:"tab-content"},T={class:"availability-card"},x={class:"staff-info"},N={class:"staff-avatar"},E={class:"staff-details"},F={class:"hours-info"},Y={class:"time-period"},_={class:"availability-grid"},O={class:"grid-header"},j={class:"grid-body"},I={class:"shift-time"},R=["onUpdate:modelValue"],z={class:"recurring-preferences"},H={class:"recurring-options"},V={class:"notes-section"},q={class:"submit-section"},P={class:"footer"},B={class:"container"},G={class:"footer-content"},L={key:0},Q={key:0,id:"confirmationModal",class:"modal"},J={class:"modal-content"},K={class:"modal-actions"};const X=t({data(){return{currentUser:{id:1,name:"Serena Tr",role:"Care Assistant",preferredHours:32,availability:{}},selectedWeek:this.getCurrentWeek(),weekDays:[],shifts:[{id:"shift1",label:"00:00 - 06:00"},{id:"shift2",label:"06:00 - 12:00"},{id:"shift3",label:"12:00 - 18:00"},{id:"shift4",label:"18:00 - 24:00"}],availabilityNotes:"",hasChanges:!1,lastSubmitted:null,submissionDeadline:"2025-05-10",showConfirmationModal:!1,notifications:[{id:1,message:"Your schedule for next week has been published"},{id:2,message:"Please submit availability for the week of May 11"}]}},computed:{submissionStatus(){return this.lastSubmitted?{text:"Submitted",class:"submitted"}:this.hasChanges?{text:"Unsaved Changes",class:"unsaved"}:{text:"Not Submitted",class:"not-submitted"}}},async created(){try{const t=await a.get("/staffFull/full"),e=t.data.find((a=>101===a.id));e&&(this.currentUser={id:e.id,name:e.name,role:e.role,preferredHours:32,availability:e.availability||{}})}catch(t){console.error("Failed to fetch staff data:",t)}this.updateWeekDays()},methods:{getCurrentWeek(){const a=new Date,t=a.getFullYear();(a.getMonth()+1).toString().padStart(2,"0"),a.getDate().toString().padStart(2,"0");return`${t}-W${this.getWeekNumber(a)}`},getWeekNumber(a){const t=new Date(a.getFullYear(),0,1),e=(a-t)/864e5;return Math.ceil((e+t.getDay()+1)/7)},updateWeekDays(){this.weekDays=[];const[a,t]=this.selectedWeek.split("-W"),e=new Date(a,0,1+7*(t-1)),i=e.getDay(),s=0===i?6:i-1,l=new Date(e);l.setDate(e.getDate()-s);for(let n=0;n<7;n++){const a=new Date(l);a.setDate(l.getDate()+n);const t=this.formatDateYMD(a),e=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],i=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"];this.weekDays.push({date:t,name:e[n],short:i[n]})}this.initializeAvailability(),this.hasChanges=!1,this.lastSubmitted=null,this.weekDays=this.weekDays.filter((a=>a&&a.date))},formatDateYMD:a=>`${a.getFullYear()}-${(a.getMonth()+1).toString().padStart(2,"0")}-${a.getDate().toString().padStart(2,"0")}`,formatDate(a){if(!a)return"";const[t,e,i]=a.split("-");return`${e}/${i}/${t}`},formatDateRange(){if(0===this.weekDays.length)return"";return`${this.formatDate(this.weekDays[0].date)} - ${this.formatDate(this.weekDays[6].date)}`},async initializeAvailability(){this.weekDays.forEach((a=>{this.currentUser.availability[a.date]||(this.currentUser.availability[a.date]={}),this.shifts.forEach((t=>{void 0===this.currentUser.availability[a.date][t.id]&&(this.currentUser.availability[a.date][t.id]=!1)}))}));try{const t=(await a.get(`/availability/${this.currentUser.id}`)).data,e={};t.forEach((a=>{e[a.date]||(e[a.date]={}),e[a.date][a.shift_id]=Boolean(a.is_available)})),this.weekDays.forEach((a=>{this.currentUser.availability[a.date]||(this.currentUser.availability[a.date]={}),this.shifts.forEach((t=>{if(e[a.date]&&void 0!==e[a.date][t.id])this.currentUser.availability[a.date][t.id]=e[a.date][t.id];else{const e="shift1"===t.id||"shift4"===t.id,i="Saturday"===a.name||"Sunday"===a.name;this.currentUser.availability[a.date][t.id]=!e&&!i}}))}))}catch(t){console.error("Failed to fetch availability data:",t),this.weekDays.forEach((a=>{this.currentUser.availability[a.date]||(this.currentUser.availability[a.date]={})})),this.shifts.forEach((a=>{void 0===this.currentUser.availability[day.date][a.id]&&(this.currentUser.availability[day.date][a.id]=!1)}))}},updateAvailabilityStatus(){this.hasChanges=!0},getInitials:a=>a?a.split(" ").map((a=>a[0])).join(""):"",async submitAvailability(){console.log("Submitting availability for week:",this.selectedWeek),console.log("Availability data:",this.currentUser.availability),console.log("Notes:",this.availabilityNotes);try{const t=[];for(const[a,e]of Object.entries(this.currentUser.availability))for(const[i,s]of Object.entries(e))t.push({staff_id:this.currentUser.id,date:a,shift_id:i,is_available:!0===s?1:0});for(const e of t)await a.post("/availability/",e);console.log(`Submitted ${t.length} availability records.`)}catch(t){console.error("Failed to submit availability:",t)}this.lastSubmitted=(new Date).toISOString().split("T")[0],this.hasChanges=!1,this.showConfirmationModal=!0},resetAvailability(){this.initializeAvailability(),this.availabilityNotes="",this.hasChanges=!1},closeConfirmationModal(){this.showConfirmationModal=!1},viewMySchedule(){alert("This would take you to your assigned schedule view")},applyTemplate(a){this.weekDays.forEach((t=>{this.shifts.forEach((e=>{let i=!1;switch(a){case"weekdays":i=!["Saturday","Sunday"].includes(t.name);break;case"weekends":i=["Saturday","Sunday"].includes(t.name);break;case"daytime":i=["shift2","shift3"].includes(e.id);break;case"evening":i=["shift3","shift4"].includes(e.id)}this.currentUser.availability[t.date][e.id]=i}))})),this.hasChanges=!0}}},[["render",function(a,t,X,Z,aa,ta){const ea=r("router-link");return f(),e("div",null,[i("header",null,[i("div",m,[i("div",p,[l(ea,{to:"/staff",class:"logo"},{default:n((()=>t[13]||(t[13]=[i("span",null,"Swin Care",-1)]))),_:1})]),i("div",k,[i("button",g,[t[14]||(t[14]=o(" ðŸ“‹ ")),aa.notifications.length>0?(f(),e("span",w,d(aa.notifications.length),1)):s("",!0)]),i("div",S,d(aa.currentUser.name),1),i("div",D,d(ta.getInitials(aa.currentUser.name)),1)])])]),i("main",U,[i("div",C,[t[23]||(t[23]=i("h1",null,"My Availability",-1)),t[24]||(t[24]=i("p",null," Submit your availability for upcoming shifts to help our team organize the schedule. ",-1)),i("div",M,[i("div",A,[t[15]||(t[15]=i("label",{for:"week-selector"},"Select Week:",-1)),c(i("input",{type:"week",id:"week-selector","onUpdate:modelValue":t[0]||(t[0]=a=>aa.selectedWeek=a),onChange:t[1]||(t[1]=(...a)=>ta.updateWeekDays&&ta.updateWeekDays(...a))},null,544),[[u,aa.selectedWeek]])]),i("div",{class:h(["status-badge",ta.submissionStatus.class])},d(ta.submissionStatus.text),3)]),i("div",W,[t[16]||(t[16]=i("button",{class:"tab-btn active"},"My Availability",-1)),i("button",{class:"tab-btn",onClick:t[2]||(t[2]=(...a)=>ta.viewMySchedule&&ta.viewMySchedule(...a))},"My Schedule")]),i("div",$,[i("div",T,[i("div",x,[i("div",N,d(ta.getInitials(aa.currentUser.name)),1),i("div",E,[i("h3",null,d(aa.currentUser.name),1),i("p",null,d(aa.currentUser.role),1),i("p",F," Preferred Hours: "+d(aa.currentUser.preferredHours)+" hrs/week ",1)]),i("div",Y,[i("h3",null,d(ta.formatDateRange()),1)])]),t[22]||(t[22]=i("div",{class:"availability-instructions"},[i("p",null," Check the boxes for times when you are available to work. Your administrator will use this information to create the final schedule. ")],-1)),i("div",_,[i("div",O,[t[17]||(t[17]=i("span",null,null,-1)),(f(!0),e(y,null,b(aa.weekDays,(a=>(f(),e("span",{key:a.date},d(a.short),1)))),128))]),i("div",j,[(f(!0),e(y,null,b(aa.shifts,(a=>(f(),e("div",{key:a.id,class:"grid-row"},[i("span",I,d(a.label),1),(f(!0),e(y,null,b(aa.weekDays,(l=>(f(),e("label",{key:`${aa.currentUser.id}-${l.date}-${a.id}`,class:"availability-cell"},[aa.currentUser.availability[l.date]?c((f(),e("input",{key:0,type:"checkbox","onUpdate:modelValue":t=>aa.currentUser.availability[l.date][a.id]=t,onChange:t[3]||(t[3]=(...a)=>ta.updateAvailabilityStatus&&ta.updateAvailabilityStatus(...a))},null,40,R)),[[v,aa.currentUser.availability[l.date][a.id]]]):s("",!0),t[18]||(t[18]=i("span",{class:"checkmark"},null,-1))])))),128))])))),128))])]),i("div",z,[t[19]||(t[19]=i("h3",null,"Set Recurring Availability",-1)),t[20]||(t[20]=i("p",null,"Quick-set your typical weekly availability pattern",-1)),i("div",H,[i("button",{onClick:t[4]||(t[4]=a=>ta.applyTemplate("weekdays")),class:"template-btn"}," Weekdays Only "),i("button",{onClick:t[5]||(t[5]=a=>ta.applyTemplate("weekends")),class:"template-btn"}," Weekends Only "),i("button",{onClick:t[6]||(t[6]=a=>ta.applyTemplate("daytime")),class:"template-btn"}," Day Shifts Only "),i("button",{onClick:t[7]||(t[7]=a=>ta.applyTemplate("evening")),class:"template-btn"}," Evening Shifts Only ")])]),i("div",V,[t[21]||(t[21]=i("h3",null,"Additional Notes",-1)),c(i("textarea",{"onUpdate:modelValue":t[8]||(t[8]=a=>aa.availabilityNotes=a),placeholder:"Add any additional information about your availability here...",rows:"3"},null,512),[[u,aa.availabilityNotes]])]),i("div",q,[i("button",{class:"submit-btn",onClick:t[9]||(t[9]=(...a)=>ta.submitAvailability&&ta.submitAvailability(...a))}," Submit Availability "),i("button",{class:"reset-btn",onClick:t[10]||(t[10]=(...a)=>ta.resetAvailability&&ta.resetAvailability(...a))}," Reset ")])])])])]),i("footer",P,[i("div",B,[i("div",G,[i("p",null," Last submitted: "+d(aa.lastSubmitted?ta.formatDate(aa.lastSubmitted):"Not yet submitted"),1),aa.submissionDeadline?(f(),e("p",L," Submission deadline: "+d(ta.formatDate(aa.submissionDeadline)),1)):s("",!0)])])]),aa.showConfirmationModal?(f(),e("div",Q,[i("div",J,[i("span",{class:"close",onClick:t[11]||(t[11]=(...a)=>ta.closeConfirmationModal&&ta.closeConfirmationModal(...a))},"Ã—"),t[25]||(t[25]=i("div",{class:"confirmation-icon"},"âœ“",-1)),t[26]||(t[26]=i("h2",null,"Availability Submitted",-1)),i("p",null," Your availability for "+d(ta.formatDateRange())+" has been successfully submitted. ",1),t[27]||(t[27]=i("p",{class:"confirmation-note"}," You can update your availability any time before the submission deadline. ",-1)),i("div",K,[i("button",{class:"cta",onClick:t[12]||(t[12]=(...a)=>ta.closeConfirmationModal&&ta.closeConfirmationModal(...a))},"Got it")])])])):s("",!0)])}],["__scopeId","data-v-833b8062"]]);export{X as default};
